AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  Creates the core infrastructure: S3 bucket for emails, DynamoDB table for results,
  and the S3 event triggers for both initial processing and attachment OCR.

Parameters:
  InitialProcessingLambdaArn:
    Type: String
    Description: The ARN of the Lambda function that will be triggered by new emails.
  AttachmentOcrLambdaArn:
    Type: String
    Description: The ARN of the Lambda function that will be triggered by new attachments.
  ResultsDynamoDbTableName:
    Type: String
    Description: The name for the DynamoDB table that will store the results.

Resources:
  # These permissions are created first, using a predictable bucket ARN to break dependency loops.
  S3InvokeInitialLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref InitialProcessingLambdaArn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub 'arn:aws:s3:::ai-email-demo-emails-${AWS::AccountId}-${AWS::Region}'
      SourceAccount: !Ref AWS::AccountId

  S3InvokeAttachmentLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref AttachmentOcrLambdaArn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub 'arn:aws:s3:::ai-email-demo-emails-${AWS::AccountId}-${AWS::Region}'
      SourceAccount: !Ref AWS::AccountId

  EmailS3Bucket:
    Type: AWS::S3::Bucket
    # This bucket waits until the Lambda permissions are fully created before configuring itself.
    DependsOn:
      - S3InvokeInitialLambdaPermission
      - S3InvokeAttachmentLambdaPermission
    Properties:
      BucketName: !Sub 'ai-email-demo-emails-${AWS::AccountId}-${AWS::Region}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: ExpireOldEmails
            Status: Enabled
            ExpirationInDays: 7
      NotificationConfiguration:
        LambdaConfigurations:
          # Trigger 1: For new emails in the 'incoming-emails/' prefix.
          - Event: 's3:ObjectCreated:*'
            Function: !Ref InitialProcessingLambdaArn
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: incoming-emails/
          # Trigger 2: For new attachments in the 'attachments/' prefix.
          - Event: 's3:ObjectCreated:*'
            Function: !Ref AttachmentOcrLambdaArn
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: attachments/

  EmailS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Sub 'ai-email-demo-emails-${AWS::AccountId}-${AWS::Region}' # Uses predictable name to break dependency
      PolicyDocument:
        Statement:
          - Sid: AllowSESPuts
            Effect: Allow
            Principal:
              Service: ses.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub 'arn:aws:s3:::ai-email-demo-emails-${AWS::AccountId}-${AWS::Region}/*'
            Condition:
              StringEquals:
                'aws:Referer': !Ref AWS::AccountId

  ResultsDynamoDbTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: messageId
          AttributeType: S
      KeySchema:
        - AttributeName: messageId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      TableName: !Ref ResultsDynamoDbTableName
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

Outputs:
  EmailS3BucketName:
    Description: Name of the S3 bucket for storing emails and attachments.
    Value: !Ref EmailS3Bucket
  ResultsDynamoDbTableName:
    Description: Name of the DynamoDB table for storing results.
    Value: !Ref ResultsDynamoDbTable
  DynamoDbStreamArn:
    Description: ARN of the DynamoDB stream for the results table.
    Value: !GetAtt ResultsDynamoDbTable.StreamArn